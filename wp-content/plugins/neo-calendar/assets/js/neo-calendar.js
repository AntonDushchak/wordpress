/**
 * Neo Calendar - JavaScript
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∏ AJAX —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
 */

(function($) {
    'use strict';

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    $(document).ready(function() {
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞
        initNeoCalendar();
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
        $('#neo-calendar-settings-form').on('submit', handleSettingsSubmit);
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ preview –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        $('#plugin-name, #plugin-description, #plugin-version').on('input', updatePreview);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∏–¥–∂–µ—Ç–∞
        $(document).on('click', '.refresh-btn', refreshWidget);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        animateElements();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è tooltips
        initTooltips();
    });

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞
     */
    function initNeoCalendar() {
        console.log('Neo Calendar initialized! üöÄ');
        console.log('Document ready state:', document.readyState);
        console.log('jQuery version:', $.fn.jquery);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        showWelcomeMessage();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        $('.card').addClass('fade-in-up');
        
        // FullCalendar —Ç–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –≤ HTML
        console.log('Neo Calendar initialized! FullCalendar will be loaded directly in HTML.');
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    function handleSettingsSubmit(e) {
        e.preventDefault();
        
        const form = $(this);
        const submitBtn = form.find('button[type="submit"]');
        const originalText = submitBtn.text();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.prop('disabled', true).text('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
        
        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        const formData = {
            action: 'neo_calendar_action',
            nonce: neoCalendarAjax.nonce,
            message: 'Settings saved successfully!',
            settings: {
                name: $('#plugin-name').val(),
                description: $('#plugin-description').val(),
                version: $('#plugin-version').val()
            }
        };
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º AJAX –∑–∞–ø—Ä–æ—Å
        $.post(neoCalendarAjax.ajaxurl, formData)
            .done(function(response) {
                if (response.success) {
                    showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!', 'success');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    $('.card-header h3').text('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ - ' + formData.settings.name);
                    
                    // –ê–Ω–∏–º–∞—Ü–∏—è —É—Å–ø–µ—Ö–∞
                    form.addClass('saved-success');
                    setTimeout(() => form.removeClass('saved-success'), 2000);
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: ' + response.data, 'error');
                }
            })
            .fail(function(xhr, status, error) {
                showNotification('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ' + error, 'error');
            })
            .always(function() {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                submitBtn.prop('disabled', false).text(originalText);
            });
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞
     */
    function refreshWidget() {
        const btn = $(this);
        const originalHtml = btn.html();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        btn.prop('disabled', true).html('<i class="bi bi-arrow-clockwise spin"></i> –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...');
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        setTimeout(function() {
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–∂–µ—Ç–∞
            updateWidgetData();
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            btn.prop('disabled', false).html(originalHtml);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            showNotification('–í–∏–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω!', 'success');
        }, 1500);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–∞
     */
    function updateWidgetData() {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, —Å—á–µ—Ç—á–∏–∫–∏ –∏ —Ç.–¥.
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        $('.widget-stats').addClass('updated');
        setTimeout(() => $('.widget-stats').removeClass('updated'), 1000);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ preview –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
     */
    function updatePreview() {
        const name = $('#plugin-name').val() || '–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞';
        const description = $('#plugin-description').val() || '–û–ø–∏—Å–∞–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞';
        const version = $('#plugin-version').val() || '1.0.0';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º preview
        $('#preview-name').text(name);
        $('#preview-description').text(description);
        $('#preview-version').text('v' + version);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        $('#preview-card').addClass('preview-updated');
        setTimeout(() => $('#preview-card').removeClass('preview-updated'), 500);
    }

    /**
     * –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    function animateElements() {
        // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
        $('.card').each(function(index) {
            const card = $(this);
            setTimeout(() => {
                card.addClass('fade-in-up');
            }, index * 100);
        });
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        $('.widget-stats h4').each(function() {
            const number = $(this);
            const finalValue = parseInt(number.text());
            animateNumber(number, 0, finalValue, 1000);
        });
    }

    /**
     * –ê–Ω–∏–º–∞—Ü–∏—è —á–∏—Å–µ–ª
     */
    function animateNumber(element, start, end, duration) {
        const startTime = performance.now();
        
        function updateNumber(currentTime) {
            const elapsed = currentTime - startTime;
            const progress = Math.min(elapsed / duration, 1);
            
            const current = Math.floor(start + (end - start) * progress);
            element.text(current);
            
            if (progress < 1) {
                requestAnimationFrame(updateNumber);
            }
        }
        
        requestAnimationFrame(updateNumber);
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è tooltips
     */
    function initTooltips() {
        $('[data-tooltip]').each(function() {
            const element = $(this);
            const tooltip = element.attr('data-tooltip');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è tooltip
            element.addClass('tooltip');
        });
    }

    /**
     * –ü–æ–∫–∞–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    function showWelcomeMessage() {
        const welcomeHtml = `
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                <i class="bi bi-info-circle me-2"></i>
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Neo Calendar! üéâ
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `;
        
        $('.card-body').first().prepend(welcomeHtml);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            $('.alert').fadeOut();
        }, 5000);
    }

    /**
     * –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
     */
    function showNotification(message, type = 'info') {
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        $('.notification').remove();
        
        const notification = $(`
            <div class="notification ${type}">
                <i class="bi bi-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-triangle' : 'info-circle'} me-2"></i>
                ${message}
            </div>
        `);
        
        $('body').append(notification);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        setTimeout(() => notification.addClass('show'), 100);
        
        // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.removeClass('show');
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }

    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    function openModal(content) {
        const modal = $(`
            <div class="modal-overlay">
                <div class="modal-content">
                    ${content}
                    <button class="btn btn-secondary mt-3" onclick="closeModal()">–ó–∞–∫—Ä—ã—Ç—å</button>
                </div>
            </div>
        `);
        
        $('body').append(modal);
        
        setTimeout(() => modal.addClass('show'), 100);
    }

    /**
     * –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
     */
    function closeModal() {
        $('.modal-overlay').removeClass('show');
        setTimeout(() => $('.modal-overlay').remove(), 300);
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
     */
    function exportData(format = 'json') {
        const data = {
            plugin: 'Neo Calendar',
            version: '1.0.0',
            exportDate: new Date().toISOString(),
            settings: {
                name: $('#plugin-name').val(),
                description: $('#plugin-description').val(),
                version: $('#plugin-version').val()
            }
        };
        
        if (format === 'json') {
            downloadFile(JSON.stringify(data, null, 2), 'neo-calendar-settings.json', 'application/json');
        } else if (format === 'csv') {
            const csv = convertToCSV(data);
            downloadFile(csv, 'neo-calendar-settings.csv', 'text/csv');
        }
    }

    /**
     * –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ CSV
     */
    function convertToCSV(data) {
        const rows = [];
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        rows.push(['Key', 'Value']);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        Object.entries(data).forEach(([key, value]) => {
            if (typeof value === 'object') {
                Object.entries(value).forEach(([subKey, subValue]) => {
                    rows.push([`${key}.${subKey}`, subValue]);
                });
            } else {
                rows.push([key, value]);
            }
        });
        
        return rows.map(row => row.map(cell => `"${cell}"`).join(',')).join('\n');
    }

    /**
     * –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
     */
    function downloadFile(content, filename, contentType) {
        const blob = new Blob([content], { type: contentType });
        const url = URL.createObjectURL(blob);
        
        const link = document.createElement('a');
        link.href = url;
        link.download = filename;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        URL.revokeObjectURL(url);
    }

    /**
     * –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
     */
    function importData(file) {
        const reader = new FileReader();
        
        reader.onload = function(e) {
            try {
                const data = JSON.parse(e.target.result);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
                if (data.plugin === 'Neo Calendar' && data.settings) {
                    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
                    $('#plugin-name').val(data.settings.name || '');
                    $('#plugin-description').val(data.settings.description || '');
                    $('#plugin-version').val(data.settings.version || '');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º preview
                    updatePreview();
                    
                    showNotification('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
                } else {
                    showNotification('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞!', 'error');
                }
            } catch (error) {
                showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: ' + error.message, 'error');
            }
        };
        
        reader.readAsText(file);
    }

    /**
     * –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    function resetSettings() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?')) {
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
            $('#neo-calendar-settings-form')[0].reset();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º preview
            updatePreview();
            
            showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã!', 'info');
        }
    }

    /**
     * –ü–æ–∏—Å–∫ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
     */
    function searchSettings(query) {
        const searchTerm = query.toLowerCase();
        
        $('.form-group').each(function() {
            const group = $(this);
            const label = group.find('label').text().toLowerCase();
            const input = group.find('input, textarea, select');
            
            if (label.includes(searchTerm) || input.val().toLowerCase().includes(searchTerm)) {
                group.show();
                group.addClass('search-highlight');
            } else {
                group.hide();
                group.removeClass('search-highlight');
            }
        });
        
        // –£–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            $('.search-highlight').removeClass('search-highlight');
        }, 2000);
    }

    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
     */
    function validateForm() {
        let isValid = true;
        const errors = [];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        const requiredFields = ['plugin-name', 'plugin-description', 'plugin-version'];
        
        requiredFields.forEach(fieldId => {
            const field = $('#' + fieldId);
            const value = field.val().trim();
            
            if (!value) {
                field.addClass('is-invalid');
                isValid = false;
                errors.push(`–ü–æ–ª–µ "${field.prev('label').text()}" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è`);
            } else {
                field.removeClass('is-invalid');
            }
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
        const version = $('#plugin-version').val();
        if (version && !/^\d+\.\d+\.\d+$/.test(version)) {
            $('#plugin-version').addClass('is-invalid');
            isValid = false;
            errors.push('–í–µ—Ä—Å–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ X.Y.Z');
        }
        
        return { isValid, errors };
    }



    // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    window.NeoCalendar = {
        openModal,
        closeModal,
        exportData,
        importData,
        resetSettings,
        searchSettings,
        validateForm
    };

})(jQuery);
